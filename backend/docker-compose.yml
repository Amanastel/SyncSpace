version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: syncspace_mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: syncspace
      MYSQL_USER: syncspace_user
      MYSQL_PASSWORD: syncspace_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - syncspace_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: syncspace_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - syncspace_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: syncspace_backend
    environment:
      - DATABASE_URL=mysql+pymysql://syncspace_user:syncspace_pass@mysql:3306/syncspace
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
      - CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    networks:
      - syncspace_network
    restart: unless-stopped

  # NGINX (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: syncspace_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # For SSL certificates
    depends_on:
      - backend
    networks:
      - syncspace_network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  syncspace_network:
    driver: bridge
